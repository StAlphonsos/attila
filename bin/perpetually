#!/bin/sh
##
# perpetually - do something perpetually and timestamp the output into a log
#
# I use this command:
#    $ perpetually finance
# to start up my finance watching log.  Since I have the LOGDIR envar
# set to ~/logs, this ends up appending time-stamped logs of my view
# of the financial world to ~/logs/finance.log every 300 seconds.
#
# This script depends on my ts script.
##

# usage: v=`optval option $string`
# if $string looks like "--option=foo" then v will be "foo"
#
optval () {
    _opt="$1"
    shift
    echo "$*" | sed -e "s/^--${_opt}=//"
}

## Initialize

sleep=300
cmd=""
msg=""

## Parse CLA

while [ x"$1" != x ]; do
    case "$1" in
        --sleep=*)
	    _sleep=`optval sleep "$1"`
	    echo $0: sleep: $sleep '=>' $_sleep
	    sleep=$_sleep
	    ;;
	--msg=*)
	    msg=`optval msg "$1"`
	    ;;
	--log=*)
	    log=`optval log "$1"`
	    ;;
	*)
	    if [ x"$cmd" = x ]; then
		cmd="$1"
	    else
		cmd="${cmd} $1"
	    fi
	    ;;
    esac
    shift
done

## Apply defaults

[ x"$cmd" = x ] && {
    echo usage: `basename $0` '[--sleep=s] [--msg=m] [--log=l] 'command
    exit 1
}
[ x"$msg" = x ] && {
    msg="Running: $cmd"
}
[ x"$log" = x ] && {
    _name=`echo ${cmd} | awk '{print $1}'`
    log=`basename ${_name}`.log
    [ x"${LOGDIR}" != x ] && {
	log="${LOGDIR}/${log}"
    }
    echo $0: logging to ${log}
}

## Drop into our loop

exec 2>&1				# we want stderr in the log
while true; do
    echo '*** '$msg
    ${cmd}
    echo '*** All quiet'
    sleep ${sleep}
done | ts -days ${log}
